// ‚Äî ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Google Sheets API
const SHEET_ID = "19pJJpiDKatYgUmO_43SUyECxqTYaqfhwcQwYiuxn-d8";
const API_KEY  = "AIzaSyAki5uoqv3JpG7sqZ7crpaALomcUxlD72k";
const RANGE    = "Maintenance!B2:G";

let rawData = [];

// ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Google Sheets
async function loadData() {
  const url = `https://sheets.googleapis.com/v4/spreadsheets/${SHEET_ID}/values/${RANGE}?key=${API_KEY}`;
  const res = await fetch(url);
  const obj = await res.json();
  rawData = obj.values || [];

  populateDropdowns();
  populateSuggestions();
}

// ‡∏™‡∏£‡πâ‡∏≤‡∏á dropdown ‡πÅ‡∏ö‡∏ö‡πÑ‡∏î‡∏ô‡∏≤‡∏°‡∏¥‡∏Å (Model ‚Üí Year ‚Üí System)
function populateDropdowns() {
  const modelSelect = document.getElementById("model");
  const yearSelect  = document.getElementById("modelYear");
  const sysSelect   = document.getElementById("system");

  // Model (A‚ÄìZ)
  const models = [...new Set(rawData.map(r => r[0]).filter(v => v))].sort();
  modelSelect.innerHTML = `<option value=''>-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Model --</option>`;
  models.forEach(m => modelSelect.innerHTML += `<option>${m}</option>`);

  modelSelect.onchange = () => {
    // Model Year (Z‚ÄìA)
    const m = modelSelect.value;
    const years = [...new Set(
      rawData
        .filter(r => r[0] === m)
        .map(r => r[1])
        .filter(v => v)
    )]
    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡πÅ‡∏ö‡∏ö Z‚ÄìA
    .sort()
    .reverse();

    yearSelect.innerHTML = `<option value=''>-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏∏‡πà‡∏ô‡∏õ‡∏µ --</option>`;
    years.forEach(y => yearSelect.innerHTML += `<option>${y}</option>`);

    // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå System ‡πÅ‡∏•‡∏∞‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÄ‡∏î‡∏¥‡∏°
    sysSelect.innerHTML = `<option value=''>-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏∞‡∏ö‡∏ö --</option>`;
    document.getElementById("results").innerHTML = "";
  };

  yearSelect.onchange = () => {
    // System (‡∏ï‡∏≤‡∏°‡∏•‡∏≥‡∏î‡∏±‡∏ö‡πÉ‡∏ô sheet)
    const m = modelSelect.value;
    const y = yearSelect.value;
    // ‡πÉ‡∏ä‡πâ Set ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏±‡∏î‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏à‡∏≠‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å (insertion order = sheet order)
    const systems = [...new Set(
      rawData
        .filter(r => r[0] === m && r[1] === y)
        .map(r => r[2])
        .filter(v => v)
    )];

    sysSelect.innerHTML = `<option value=''>-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏∞‡∏ö‡∏ö --</option>`;
    systems.forEach(s => sysSelect.innerHTML += `<option>${s}</option>`);

    document.getElementById("results").innerHTML = "";
  };

  sysSelect.onchange = () => {
    // ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡∏£‡∏ö 3 ‡∏ï‡∏±‡∏ß
    const m = modelSelect.value, y = yearSelect.value, s = sysSelect.value;
    if (m && y && s) {
      displayGroups(
        rawData.filter(r => r[0] === m && r[1] === y && r[2] === s)
      );
    }
  };
}

// ‡πÄ‡∏ï‡∏¥‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö autosuggest (‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå ‚ÄúList‚Äù = index 3)
function populateSuggestions() {
  const dl   = document.getElementById("suggestions");
  const keys = [...new Set(rawData.map(r => r[3]).filter(v => v))];
  keys.forEach(k => {
    const o = document.createElement("option");
    o.value = k;
    dl.appendChild(o);
  });
}

// ‡∏Å‡∏î ‚Äú‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‚Äù ‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏≥ (manual + autosuggest)
document.getElementById("searchBtn").onclick = () => {
  const kw = document.getElementById("search").value.trim().toLowerCase();
  if (!kw) return;
  const filtered = rawData.filter(r =>
    r[3].toLowerCase().includes(kw)
  );
  displayGroups(filtered);
};

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
function displayGroups(rows) {
  const results = document.getElementById("results");
  results.innerHTML = "";

  if (!rows.length) {
    results.innerHTML = `<p style="color:red;">‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</p>`;
    return;
  }

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á Map<"Model__Year", rows[]>
  const groups = new Map();
  rows.forEach(r => {
    const key = `${r[0]}__${r[1]}`;
    if (!groups.has(key)) groups.set(key, []);
    groups.get(key).push(r);
  });

  // ‡∏ß‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Å‡∏•‡∏∏‡πà‡∏°
  groups.forEach((items, key) => {
    const [model, year] = key.split("__");

    // ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏∏‡πä‡∏õ
    const g = document.createElement("div");
    g.className = "group";

    // ‡∏´‡∏±‡∏ß‡∏Å‡∏•‡πà‡∏≠‡∏á
    const h = document.createElement("p");
    h.className = "group-header";
    h.innerHTML = `<strong>${model}</strong> 
                   <span class="model-year">${year}</span>`;
    g.appendChild(h);

    // ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏Å‡∏•‡∏∏‡πà‡∏°
    items.forEach(r => {
      const d = document.createElement("div");
      d.className = "item";
      d.innerHTML = `
        <p class="item-title">üìò ${r[3]}</p>
        <p class="item-period">‚è≥ ${r[5] || '-'} </p>
      `;
      g.appendChild(d);
    });

    results.appendChild(g);
  });
}

// ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÇ‡∏´‡∏•‡∏î
loadData();
