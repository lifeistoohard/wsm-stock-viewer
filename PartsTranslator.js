// --- ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Google Sheets API
const SHEET_ID = "19pJJpiDKatYgUmO_43SUyECxqTYaqfhwcQwYiuxn-d8"; // <-- ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô SHEET ID ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
const API_KEY  = "AIzaSyAki5uoqv3JpG7sqZ7crpaALomcUxlD72k"; // <-- ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô API KEY ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
const GLOSSARY_RANGE = "Glossary!A2:B";

let glossaryData = []; // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏î‡∏¥‡∏ö‡∏à‡∏≤‡∏Å Google Sheets

// ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Google Sheets
async function loadData() {
    const url = `https://sheets.googleapis.com/v4/spreadsheets/${SHEET_ID}/values/${GLOSSARY_RANGE}?key=${API_KEY}`;
    try {
        const res = await fetch(url);
        const obj = await res.json();
        glossaryData = obj.values || [];

        populateSuggestions();
    } catch (error) {
        console.error("Error fetching data:", error);
        document.getElementById("results").innerHTML = `<p style="color:red; text-align: center;">‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ ‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö API Key ‡∏´‡∏£‡∏∑‡∏≠ Sheet ID</p>`;
    }
}

// ‡πÄ‡∏ï‡∏¥‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö autosuggest (‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏© = index 0)
function populateSuggestions() {
    const dl = document.getElementById("suggestions");

    // ‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: ‡∏ô‡∏≥‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 0 (‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©) ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå 1 (‡πÑ‡∏ó‡∏¢) ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    const keys = [...new Set(glossaryData.filter(r => r[0] && r[1]).map(r => r[0]))];
    
    dl.innerHTML = ''; // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πà‡∏≤
    keys.forEach(k => {
        const o = document.createElement("option");
        o.value = k;
        dl.appendChild(o);
    });
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
function copyToClipboard(text) {
    navigator.clipboard.writeText(text).then(() => {
        alert("‚úÖ ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏Ñ‡∏≥‡πÅ‡∏õ‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!");
    }).catch(err => {
        console.error('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏î‡πâ:', err);
    });
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏° Event Listener ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
function addCopyButtonListeners() {
    document.querySelectorAll('.copy-btn').forEach(button => {
        button.addEventListener('click', (event) => {
            const textToCopy = event.currentTarget.dataset.translation;
            copyToClipboard(textToCopy);
        });
    });
}

// ‡∏Å‡∏î ‚Äú‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‚Äù ‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏≥
document.getElementById("searchBtn").onclick = () => {
    const kw = document.getElementById("search").value.trim();
    if (!kw) {
        document.getElementById("results").innerHTML = `<p style="color:red; text-align: center;">‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤</p>`;
        return;
    }

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Ñ‡∏≥‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const isThai = /[\u0E00-\u0E7F]/.test(kw);

    let filtered = [];
    if (isThai) {
        // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ ‡πÉ‡∏´‡πâ‡∏´‡∏≤‡∏Ñ‡∏≥‡πÅ‡∏õ‡∏•‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©
        filtered = glossaryData.filter(r => 
            r[1] && r[1].includes(kw)
        );
    } else {
        const lowerCaseKw = kw.toLowerCase();
        // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏© ‡πÉ‡∏´‡πâ‡∏´‡∏≤‡∏Ñ‡∏≥‡πÅ‡∏õ‡∏•‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
        filtered = glossaryData.filter(r => 
            r[0] && r[0].toLowerCase().includes(lowerCaseKw)
        );
    }

    displayResults(filtered, isThai);
};

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
function displayResults(rows, isThaiSearch) {
    const results = document.getElementById("results");
    results.innerHTML = "";

    if (!rows.length) {
        results.innerHTML = `<p style="color:red; text-align: center;">‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤ "${document.getElementById("search").value}"</p>`;
        return;
    }

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
    rows.forEach(r => {
        const english = r[0] || "N/A";
        const thai = r[1] || "-";
        
        let textToCopy;
        let translatedText;
        
        if (isThaiSearch) {
            textToCopy = english;
            translatedText = `<strong>‡∏Ñ‡∏≥‡πÅ‡∏õ‡∏•:</strong> ${english}`;
        } else {
            textToCopy = thai;
            translatedText = `<strong>‡∏Ñ‡∏≥‡πÅ‡∏õ‡∏•:</strong> ${thai}`;
        }

        const g = document.createElement("div");
        g.className = "result-group";
        
        g.innerHTML = `
            <h2>${isThaiSearch ? thai : english}</h2>
            <p>${translatedText}</p>
            <button class="copy-btn" data-translation="${textToCopy}">
                üìÑ ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏Ñ‡∏≥‡πÅ‡∏õ‡∏•
            </button>
        `;
        results.appendChild(g);
    });
    
    // ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÅ‡∏•‡πâ‡∏ß ‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏° event listener ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏ó‡∏∏‡∏Å‡∏õ‡∏∏‡πà‡∏°
    addCopyButtonListeners();
}

// ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö
loadData();
