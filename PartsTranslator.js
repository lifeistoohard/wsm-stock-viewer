// --- ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Google Sheets API
const SHEET_ID = "19pJJpiDKatYgUmO_43SUyECxqTYaqfhwcQwYiuxn-d8"; // <-- ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô SHEET ID ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
const API_KEY  = "AIzaSyAki5uoqv3JpG7sqZ7crpaALomcUxlD72k"; // <-- ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô API KEY ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
const GLOSSARY_RANGE = "Glossary!A2:B";

let glossaryData = []; // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏î‡∏¥‡∏ö‡∏à‡∏≤‡∏Å Google Sheets

// ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Google Sheets
async function loadData() {
    const url = `https://sheets.googleapis.com/v4/spreadsheets/${SHEET_ID}/values/${GLOSSARY_RANGE}?key=${API_KEY}`;
    try {
        const res = await fetch(url);
        const obj = await res.json();
        glossaryData = obj.values || [];

        populateSuggestions();
    } catch (error) {
        console.error("Error fetching data:", error);
        document.getElementById("results").innerHTML = `<p style="color:red; text-align: center;">‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ ‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö API Key ‡∏´‡∏£‡∏∑‡∏≠ Sheet ID</p>`;
    }
}

// ‡πÄ‡∏ï‡∏¥‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö autosuggest (‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©‡πÅ‡∏•‡∏∞‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢)
function populateSuggestions() {
    const dl = document.getElementById("suggestions");
    
    const completeEntries = glossaryData.filter(r => r[0] && r[1]);
    
    const englishKeys = completeEntries.map(r => r[0]);
    const thaiKeys = completeEntries.map(r => r[1]);

    const allKeys = [...new Set([...englishKeys, ...thaiKeys])].sort();
    
    dl.innerHTML = '';
    allKeys.forEach(k => {
        const o = document.createElement("option");
        o.value = k;
        dl.appendChild(o);
    });
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
function copyToClipboard(text) {
    navigator.clipboard.writeText(text).then(() => {
        showToast();
    }).catch(err => {
        console.error('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏î‡πâ:', err);
    });
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏ñ‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô (Toast Notification)
function showToast() {
    const toast = document.getElementById("notification-toast");
    toast.className = "show";
    setTimeout(function(){ 
        toast.className = toast.className.replace("show", ""); 
    }, 3000);
}

// ‡πÄ‡∏û‡∏¥‡πà‡∏° Event Listener ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
function addCopyButtonListeners() {
    document.querySelectorAll('.copy-btn').forEach(button => {
        button.addEventListener('click', (event) => {
            const textToCopy = event.currentTarget.dataset.translation;
            copyToClipboard(textToCopy);
        });
    });
}

// ‡∏Å‡∏î ‚Äú‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‚Äù ‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏≥
document.getElementById("searchBtn").onclick = () => {
    const kw = document.getElementById("search").value.trim();
    if (!kw) {
        document.getElementById("results").innerHTML = `<p style="color:red; text-align: center;">‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤</p>`;
        return;
    }

    const isThai = /[\u0E00-\u0E7F]/.test(kw);

    let filtered = [];
    if (isThai) {
        filtered = glossaryData.filter(r => 
            r[1] && r[1].includes(kw)
        );
    } else {
        const lowerCaseKw = kw.toLowerCase();
        filtered = glossaryData.filter(r => 
            r[0] && r[0].toLowerCase().includes(lowerCaseKw)
        );
    }

    displayResults(filtered, isThai);
};
// ‡πÄ‡∏û‡∏¥‡πà‡∏° Event Listener ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° Enter
document.getElementById("search").addEventListener("keypress", function(event) {
    // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏Å‡∏î‡∏Ñ‡∏∑‡∏≠ Enter (‡∏°‡∏µ keyCode 13)
    if (event.key === 'Enter') {
        // ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ç‡∏≠‡∏á‡∏õ‡∏∏‡πà‡∏° (‡πÄ‡∏ä‡πà‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°)
        event.preventDefault(); 
        // ‡∏™‡∏±‡πà‡∏á‡πÉ‡∏´‡πâ‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ñ‡∏π‡∏Å‡∏Ñ‡∏•‡∏¥‡∏Å
        document.getElementById("searchBtn").click();
    }
});
// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
function displayResults(rows, isThaiSearch) {
    const results = document.getElementById("results");
    results.innerHTML = "";

    if (!rows.length) {
        results.innerHTML = `<p style="color:red; text-align: center;">‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤ "${document.getElementById("search").value}"</p>`;
        return;
    }

    rows.forEach(r => {
        const english = r[0] || "N/A";
        const thai = r[1] || "-";
        
        let textToCopy;
        let translatedText;
        
        if (isThaiSearch) {
            textToCopy = english;
            translatedText = `<strong>‡∏Ñ‡∏≥‡πÅ‡∏õ‡∏•:</strong> ${english}`;
        } else {
            textToCopy = thai;
            translatedText = `<strong>‡∏Ñ‡∏≥‡πÅ‡∏õ‡∏•:</strong> ${thai}`;
        }

        const g = document.createElement("div");
        g.className = "result-group";
        
        g.innerHTML = `
            <div class="result-content">
                <h2>${isThaiSearch ? thai : english}</h2>
                <p>${translatedText}</p>
            </div>
            <button class="copy-btn" data-translation="${textToCopy}">
                <span>üìÑ</span> Copy
            </button>
        `;
        results.appendChild(g);
    });
    
    addCopyButtonListeners();
}

// ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö
loadData();
